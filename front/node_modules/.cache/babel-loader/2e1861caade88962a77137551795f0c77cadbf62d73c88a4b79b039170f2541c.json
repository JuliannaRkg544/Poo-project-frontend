{"ast":null,"code":"var _jsxFileName = \"/home/juliana/Documents/Projetos/poo-projeto/src/components/Today.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport UserContext from \"./Context/UserContext\";\nimport HabitsContext from \"./Context/HabitsContext\";\nimport Style from \"./styledComponents/Style\";\nimport styled from \"styled-components\";\nimport check from \"../assets/imgs/Vector-check.png\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { ThemeProvider } from \"styled-components\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Today() {\n  _s();\n  const [todayHabits, setTodayHabits] = useState([]);\n  const [selected, setSelected] = useState(false);\n  let percecentHabitsDone;\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    habits,\n    setHabits,\n    addHabit,\n    setAddHabbit\n  } = useContext(HabitsContext);\n  const token = localStorage.getItem(\"token\");\n  // const habitsNames = localStorage.getItem(\"habitsNames\")\n  // const habitsNameArr = JSON.parse(habitsNames);\n\n  useEffect(() => {\n    const URL_GET = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\";\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(URL_GET, config).then(response => {\n      setTodayHabits(response.data);\n      console.log(\"today habits \", response.data);\n    }).catch(err => {\n      console.log(\"vish..\", err.response);\n    });\n  }, [selected]);\n  function toglleHabit(id, done, index) {\n    // setMarked(!(todayHabits[index].done))\n    // console.log(todayHabits[index].done)\n    //event.preventDefault();\n\n    todayHabits[index].done = !todayHabits[index].done;\n    const action = done ? \"uncheck\" : \"check\";\n    console.log(\"done \", done, \" id \", id);\n    const URL_POST = `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/${action}`;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.post(URL_POST, {}, config).then(() => {\n      setSelected(!selected);\n      console.log(\"foi \", done);\n    }).catch(err => {\n      console.log(\"vish..\", err.response);\n      setSelected(false);\n    });\n  }\n  function renderPercent() {\n    let length = todayHabits.length;\n    let contPercent = 0;\n    todayHabits.map(hab => {\n      if (hab.done) {\n        contPercent++;\n      }\n      console.log(\"porcentagem \", contPercent);\n    });\n    percecentHabitsDone = parseInt(contPercent / length * 100);\n    if (contPercent === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nenhum h\\xE1bito conclu\\xEDdo ainda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#8fc549\"\n        },\n        children: [\" \", percecentHabitsDone, \"% dos h\\xE1bitos conclu\\xEDdos \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Today, \"Rjhc1vzBgD0PxqQ+PRvthXcS+h4=\");\n_c = Today;\nconst CheckMark = styled.div`\n  width:69px;\n  height:69px;\n \n  padding:15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  background-color: ${props => props.theme.dfColor};\n  cursor: pointer;\n\n  img{\n      width: 35px;\n      height: 28px;\n  }\n\n`;\nconst color = {\n  dfColor: '#8FC549'\n};\nconst invertedColor = {\n  dfColor: '#EBEBEB'\n};\nvar _c;\n$RefreshReg$(_c, \"Today\");","map":{"version":3,"names":["Header","Footer","UserContext","HabitsContext","Style","styled","check","useEffect","useState","useContext","axios","dayjs","ThemeProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","Today","_s","todayHabits","setTodayHabits","selected","setSelected","percecentHabitsDone","user","habits","setHabits","addHabit","setAddHabbit","token","localStorage","getItem","URL_GET","config","headers","Authorization","get","then","response","data","console","log","catch","err","toglleHabit","id","done","index","action","URL_POST","post","renderPercent","length","contPercent","map","hab","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","CheckMark","div","props","theme","dfColor","invertedColor","$RefreshReg$"],"sources":["/home/juliana/Documents/Projetos/poo-projeto/src/components/Today.js"],"sourcesContent":["import Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nimport UserContext from \"./Context/UserContext\";\nimport HabitsContext from \"./Context/HabitsContext\";\n\nimport Style from \"./styledComponents/Style\";\nimport styled from \"styled-components\"\nimport check from \"../assets/imgs/Vector-check.png\"\n\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\"\nimport { ThemeProvider } from \"styled-components\";\n\n\nexport default function Today() {\n    const [todayHabits, setTodayHabits] = useState([])\n    const [selected, setSelected] = useState(false)\n    let percecentHabitsDone ;\n   \n\n    const { user } = useContext(UserContext)\n    const {habits, setHabits, addHabit, setAddHabbit} = useContext(HabitsContext)\n\n    const token = localStorage.getItem(\"token\")\n    // const habitsNames = localStorage.getItem(\"habitsNames\")\n    // const habitsNameArr = JSON.parse(habitsNames);\n    \n\n    useEffect(()=>{\n     const URL_GET = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\"\n     const config = {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    };\n    axios.get(URL_GET,config).then(response =>{setTodayHabits(response.data)\n    console.log(\"today habits \",response.data)\n    }).catch(err=>{console.log(\"vish..\", err.response)})\n    },[selected])\n\n    function toglleHabit(id,done,index){\n        // setMarked(!(todayHabits[index].done))\n        // console.log(todayHabits[index].done)\n        //event.preventDefault();\n        \n        todayHabits[index].done = !(todayHabits[index].done);\n        const action = done ? \"uncheck\" : \"check\";\n        console.log(\"done \", done, \" id \", id)\n\n        const URL_POST = `https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${id}/${action}`\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n        \n        axios.post(URL_POST,{}, config).then(() => {\n            setSelected(!selected)\n            console.log(\"foi \",done)}\n        ).catch(err=>{console.log(\"vish..\", err.response); setSelected(false) })\n\n    }\n\n    function renderPercent(){\n       let length= todayHabits.length\n       let contPercent = 0\n       \n       todayHabits.map((hab)=> {if(hab.done){contPercent++} console.log(\"porcentagem \",contPercent) })\n       \n       percecentHabitsDone =  parseInt((contPercent/length)*100);\n       if(contPercent === 0){\n           return<span >Nenhum hábito concluído ainda</span>\n       }\n       else {\n           return <span style={{color:\"#8fc549\"}} > {percecentHabitsDone}% dos hábitos concluídos </span>\n       }\n\n    }\n\n    return (\n        <>\n        <h1>TODAY</h1>\n        </>\n      )\n}\nconst CheckMark = styled.div`\n  width:69px;\n  height:69px;\n \n  padding:15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  background-color: ${props => props.theme.dfColor};\n  cursor: pointer;\n\n  img{\n      width: 35px;\n      height: 28px;\n  }\n\n`\nconst color = {\n    dfColor: '#8FC549',\n};\n\nconst invertedColor = {\n    dfColor: '#EBEBEB',\n};"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,iCAAiC;AAEnD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGlD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,IAAIe,mBAAmB;EAGvB,MAAM;IAAEC;EAAK,CAAC,GAAGf,UAAU,CAACP,WAAW,CAAC;EACxC,MAAM;IAACuB,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGnB,UAAU,CAACN,aAAa,CAAC;EAE7E,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA;;EAGAxB,SAAS,CAAC,MAAI;IACb,MAAMyB,OAAO,GAAG,yEAAyE;IACzF,MAAMC,MAAM,GAAG;MACZC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUN,KAAK;MAClC;IACJ,CAAC;IACDnB,KAAK,CAAC0B,GAAG,CAACJ,OAAO,EAACC,MAAM,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAG;MAAClB,cAAc,CAACkB,QAAQ,CAACC,IAAI,CAAC;MACxEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACH,QAAQ,CAACC,IAAI,CAAC;IAC1C,CAAC,CAAC,CAACG,KAAK,CAACC,GAAG,IAAE;MAACH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,GAAG,CAACL,QAAQ,CAAC;IAAA,CAAC,CAAC;EACpD,CAAC,EAAC,CAACjB,QAAQ,CAAC,CAAC;EAEb,SAASuB,WAAWA,CAACC,EAAE,EAACC,IAAI,EAACC,KAAK,EAAC;IAC/B;IACA;IACA;;IAEA5B,WAAW,CAAC4B,KAAK,CAAC,CAACD,IAAI,GAAG,CAAE3B,WAAW,CAAC4B,KAAK,CAAC,CAACD,IAAK;IACpD,MAAME,MAAM,GAAGF,IAAI,GAAG,SAAS,GAAG,OAAO;IACzCN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEK,IAAI,EAAE,MAAM,EAAED,EAAE,CAAC;IAEtC,MAAMI,QAAQ,GAAG,qEAAqEJ,EAAE,IAAIG,MAAM,EAAE;IAEpG,MAAMf,MAAM,GAAG;MACXC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUN,KAAK;MAClC;IACJ,CAAC;IAEDnB,KAAK,CAACwC,IAAI,CAACD,QAAQ,EAAC,CAAC,CAAC,EAAEhB,MAAM,CAAC,CAACI,IAAI,CAAC,MAAM;MACvCf,WAAW,CAAC,CAACD,QAAQ,CAAC;MACtBmB,OAAO,CAACC,GAAG,CAAC,MAAM,EAACK,IAAI,CAAC;IAAA,CAC5B,CAAC,CAACJ,KAAK,CAACC,GAAG,IAAE;MAACH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,GAAG,CAACL,QAAQ,CAAC;MAAEhB,WAAW,CAAC,KAAK,CAAC;IAAC,CAAC,CAAC;EAE5E;EAEA,SAAS6B,aAAaA,CAAA,EAAE;IACrB,IAAIC,MAAM,GAAEjC,WAAW,CAACiC,MAAM;IAC9B,IAAIC,WAAW,GAAG,CAAC;IAEnBlC,WAAW,CAACmC,GAAG,CAAEC,GAAG,IAAI;MAAC,IAAGA,GAAG,CAACT,IAAI,EAAC;QAACO,WAAW,EAAE;MAAA;MAAEb,OAAO,CAACC,GAAG,CAAC,cAAc,EAACY,WAAW,CAAC;IAAC,CAAC,CAAC;IAE/F9B,mBAAmB,GAAIiC,QAAQ,CAAEH,WAAW,GAACD,MAAM,GAAE,GAAG,CAAC;IACzD,IAAGC,WAAW,KAAK,CAAC,EAAC;MACjB,oBAAMvC,OAAA;QAAA2C,QAAA,EAAO;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACrD,CAAC,MACI;MACD,oBAAO/C,OAAA;QAAMgD,KAAK,EAAE;UAACC,KAAK,EAAC;QAAS,CAAE;QAAAN,QAAA,GAAE,GAAC,EAAClC,mBAAmB,EAAC,iCAAyB;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAClG;EAEH;EAEA,oBACI/C,OAAA,CAAAE,SAAA;IAAAyC,QAAA,eACA3C,OAAA;MAAA2C,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACZ,CAAC;AAEX;AAAC3C,EAAA,CAvEuBD,KAAK;AAAA+C,EAAA,GAAL/C,KAAK;AAwE7B,MAAMgD,SAAS,GAAG5D,MAAM,CAAC6D,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMN,KAAK,GAAG;EACVM,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,aAAa,GAAG;EAClBD,OAAO,EAAE;AACb,CAAC;AAAC,IAAAL,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}